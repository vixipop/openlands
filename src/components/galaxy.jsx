/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/hybrid_galaxies.glb --keepnames 
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { config, animated } from "@react-spring/three";
import { useSpring } from "@react-spring/core";
import { useFrame } from "@react-three/fiber";

export function Galaxy(props) {
  const { nodes, materials } = useGLTF("./hybrid_galaxies.glb");
  const floatRef = useRef();

  useFrame((state, delta) => {
    floatRef.current.position.y =
      (Math.sin(state.clock.elapsedTime) - 0.1) * 0.2;
  });

  return (
    <group
      {...props}
      position={[0, 0, 0]}
      rotation={[0, 0, 0]}
      scale={0.9}
      dispose={null}
    >
      <mesh name="emissive" geometry={nodes.emissive.geometry}>
        <meshStandardMaterial toneMapped={false} color={[125, 61, 171]} />
      </mesh>
      <mesh
        ref={floatRef}
        name="floating"
        geometry={nodes.floating.geometry}
        material={nodes.floating.material}
        material-color={"3C1083"}
      />

      <mesh
        name="ground"
        geometry={nodes.ground.geometry}
        material={nodes.ground.material}
        material-color={"3C1083"}
      />
    </group>
  );
}

useGLTF.preload("./hybrid_galaxies.glb");
